/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.gob.ceasonora.tonerManagement.gui.administrar;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mx.gob.ceasonora.tonerManagement.entidades.Herramienta;
import mx.gob.ceasonora.tonerManagement.entidades.Prestamo;
import mx.gob.ceasonora.tonerManagement.enumeradores.Estado;
import mx.gob.ceasonora.tonerManagement.gui.MenuPrincipal;
import static mx.gob.ceasonora.tonerManagement.gui.administrar.AdministrarSalidas.salida;
import mx.gob.ceasonora.tonerManagement.gui.administrar.nuevo.NuevoPrestamo;
import mx.gob.ceasonora.tonerManagement.gui.administrar.ver.VerPrestamo;
import mx.gob.ceasonora.tonerManagement.implementaciones.HerramientaImp;
import mx.gob.ceasonora.tonerManagement.implementaciones.PrestamoImp;
import mx.gob.ceasonora.tonerManagement.instancias.InstanciaConexion;
import mx.gob.ceasonora.tonerManagement.interfaces.HerramientaInt;
import mx.gob.ceasonora.tonerManagement.interfaces.PrestamoInt;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author kevin
 */
public class AdministrarPrestamos extends javax.swing.JInternalFrame {
    InstanciaConexion conexion = InstanciaConexion.getInstanciaConexion();
    PrestamoInt pmoImp = new PrestamoImp();
    HerramientaInt herImp = new HerramientaImp();
    DefaultTableModel modelo;
    String[] titulos = {"ID", "Fecha", "Herramienta", "Recibi√≥", "Estado"};
    List<Prestamo> prestamos;
    public static Prestamo prestamo;

    /**
     * Creates new form AdministrarHerramientas
     */
    public AdministrarPrestamos() {
        initComponents();
        grupoEstado.add(pendientesButton);
        grupoEstado.add(atrasadosButton);
        grupoEstado.add(devueltosButton);
        grupoEstado.add(todosButton);
        
        modelo = new DefaultTableModel();
        prestamosTable.setModel(modelo);
        modelo.setColumnIdentifiers(titulos);
        
        try {
            if(MenuPrincipal.atraso){
                prestamos = pmoImp.buscar_estado(Estado.ATRASADO);
                atrasadosButton.setSelected(true);
            }else{
                prestamos = pmoImp.lista_prestamos();
                todosButton.setSelected(true);
            }
            
            for(Prestamo pmo : prestamos){
                Object[]o = new Object[5];
                o[0] = pmo.getId();
                o[1] = pmo.getFechaPrestamo();
                o[2] = pmo.getHerramienta().getNombre();
                o[3] = pmo.getPersonal().getNombre();
                o[4] = pmo.getEstado().name();
                
                modelo.addRow(o);
            }
        } catch (Exception e) {
            System.out.println("Error al mostrar los datos en la tabla");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoEstado = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        idTextField = new javax.swing.JTextField();
        herramientaTextField = new javax.swing.JTextField();
        buscarButton = new javax.swing.JButton();
        actualizarButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        personalTextField = new javax.swing.JTextField();
        buscarHerramientaButton = new javax.swing.JButton();
        buscarPersonalButton = new javax.swing.JButton();
        pendientesButton = new javax.swing.JRadioButton();
        atrasadosButton = new javax.swing.JRadioButton();
        devueltosButton = new javax.swing.JRadioButton();
        todosButton = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        prestamosTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        nuevoButton = new javax.swing.JButton();
        verButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        devolverButton = new javax.swing.JButton();

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(51, 102, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Administrar Prestamos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("Buscar por ID:");

        jLabel3.setText("Buscar por ID de Herramienta:");

        buscarButton.setText("Buscar");
        buscarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButtonActionPerformed(evt);
            }
        });

        actualizarButton.setText("Actualizar");
        actualizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Buscar por ID de Personal:");

        buscarHerramientaButton.setText("Buscar");
        buscarHerramientaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarHerramientaButtonActionPerformed(evt);
            }
        });

        buscarPersonalButton.setText("Buscar");
        buscarPersonalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarPersonalButtonActionPerformed(evt);
            }
        });

        pendientesButton.setText("Mostrar Pendientes");
        pendientesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pendientesButtonActionPerformed(evt);
            }
        });

        atrasadosButton.setText("Mostrar Atrasados");
        atrasadosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atrasadosButtonActionPerformed(evt);
            }
        });

        devueltosButton.setText("Mostrar Devueltos");
        devueltosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                devueltosButtonActionPerformed(evt);
            }
        });

        todosButton.setText("Mostrar Todos");
        todosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todosButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(herramientaTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                            .addComponent(idTextField, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(229, 229, 229)
                                .addComponent(buscarHerramientaButton))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(229, 229, 229)
                                .addComponent(buscarButton))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(personalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buscarPersonalButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(devueltosButton)
                            .addComponent(pendientesButton)
                            .addComponent(atrasadosButton)
                            .addComponent(todosButton)
                            .addComponent(actualizarButton, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(74, 74, 74))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscarButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(herramientaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscarHerramientaButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(personalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscarPersonalButton)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(pendientesButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(atrasadosButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(devueltosButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(todosButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addComponent(actualizarButton)
                .addContainerGap())
        );

        prestamosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Fecha", "Herramienta", "Recibi√≥", "Estado"
            }
        ));
        jScrollPane1.setViewportView(prestamosTable);

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));

        nuevoButton.setText("Nuevo Prestamo");
        nuevoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoButtonActionPerformed(evt);
            }
        });

        verButton.setText("Ver/Editar");
        verButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verButtonActionPerformed(evt);
            }
        });

        eliminarButton.setText("Eliminar");
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarButtonActionPerformed(evt);
            }
        });

        devolverButton.setText("Devolver Prestamo");
        devolverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                devolverButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(verButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(eliminarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(devolverButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nuevoButton)
                .addGap(24, 24, 24))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nuevoButton)
                    .addComponent(verButton)
                    .addComponent(eliminarButton)
                    .addComponent(devolverButton))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void actualizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarButtonActionPerformed

        modelo.setRowCount(0);
        try {
            if(atrasadosButton.isSelected()){
                prestamos = pmoImp.buscar_estado(Estado.ATRASADO);
            }else if(pendientesButton.isSelected()){
                prestamos = pmoImp.buscar_estado(Estado.PENDIENTE);
            }else if(devueltosButton.isSelected()){
                prestamos = pmoImp.buscar_estado(Estado.DEVUELTO);
            }else{
                prestamos = pmoImp.lista_prestamos();
            }
            for(Prestamo pmo : prestamos){
                Object[]o = new Object[5];
                o[0] = pmo.getId();
                o[1] = pmo.getFechaPrestamo();
                o[2] = pmo.getHerramienta().getNombre();
                o[3] = pmo.getPersonal().getNombre();
                o[4] = pmo.getEstado().name();
                
                modelo.addRow(o);
            }
        } catch (Exception e) {
            System.out.println("Error al mostrar los datos en la tabla");
        }
        
    }//GEN-LAST:event_actualizarButtonActionPerformed

    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed

        modelo.setRowCount(0);
        try {
            prestamos = pmoImp.buscar_id(Integer.parseInt(idTextField.getText()));
            for(Prestamo pmo : prestamos){
                Object[]o = new Object[5];
                o[0] = pmo.getId();
                o[1] = pmo.getFechaPrestamo();
                o[2] = pmo.getHerramienta().getNombre();
                o[3] = pmo.getPersonal().getNombre();
                o[4] = pmo.getEstado().name();
                
                modelo.addRow(o);
            }
        } catch (Exception e) {
            System.out.println("Error al mostrar los datos en la tabla");
        }
        
    }//GEN-LAST:event_buscarButtonActionPerformed

    private void buscarHerramientaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarHerramientaButtonActionPerformed
        modelo.setRowCount(0);
        try {
            prestamos = pmoImp.buscar_idHerramienta(Integer.parseInt(herramientaTextField.getText()));
            for (Prestamo pmo : prestamos) {
                Object[] o = new Object[5];
                o[0] = pmo.getId();
                o[1] = pmo.getFechaPrestamo();
                o[2] = pmo.getHerramienta().getNombre();
                o[3] = pmo.getPersonal().getNombre();
                o[4] = pmo.getEstado().name();

                modelo.addRow(o);
            }
        } catch (Exception e) {
            System.out.println("Error al mostrar los datos en la tabla");
        }

    }//GEN-LAST:event_buscarHerramientaButtonActionPerformed

    private void buscarPersonalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarPersonalButtonActionPerformed
        modelo.setRowCount(0);
        try {
            prestamos = pmoImp.buscar_idPersonal(Integer.parseInt(personalTextField.getText()));
            for (Prestamo pmo : prestamos) {
                Object[] o = new Object[5];
                o[0] = pmo.getId();
                o[1] = pmo.getFechaPrestamo();
                o[2] = pmo.getHerramienta().getNombre();
                o[3] = pmo.getPersonal().getNombre();
                o[4] = pmo.getEstado().name();

                modelo.addRow(o);
            }
        } catch (Exception e) {
            System.out.println("Error al mostrar los datos en la tabla");
        }

    }//GEN-LAST:event_buscarPersonalButtonActionPerformed

    private void eliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarButtonActionPerformed

        if(!prestamosTable.getSelectionModel().isSelectionEmpty()){
            prestamo = prestamos.get(prestamosTable.getSelectedRow());
            if (JOptionPane.showConfirmDialog(null, "¬øEsta seguro que desea eliminar el Prestamo " + prestamo.getId() + "?", "Eliminar Prestamo", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == 0) {
                try {
                    if (pmoImp.Eliminar(prestamo)) {
                        JOptionPane.showMessageDialog(null, "Prestamo eliminado con √©xito", "Prestamo eliminado", JOptionPane.INFORMATION_MESSAGE);
                        modelo.setRowCount(0);
                        if (atrasadosButton.isSelected()) {
                            prestamos = pmoImp.buscar_estado(Estado.ATRASADO);
                        } else if (pendientesButton.isSelected()) {
                            prestamos = pmoImp.buscar_estado(Estado.PENDIENTE);
                        } else if (devueltosButton.isSelected()) {
                            prestamos = pmoImp.buscar_estado(Estado.DEVUELTO);
                        } else {
                            prestamos = pmoImp.lista_prestamos();
                        }
                        for (Prestamo pmo : prestamos) {
                            Object[] o = new Object[5];
                            o[0] = pmo.getId();
                            o[1] = pmo.getFechaPrestamo();
                            o[2] = pmo.getHerramienta().getNombre();
                            o[3] = pmo.getPersonal().getNombre();
                            o[4] = pmo.getEstado().name();

                            modelo.addRow(o);
                        }
                    }
                } catch (Exception e) {
                    System.out.println("No se pudo eliminar");
                }
            }
        }

    }//GEN-LAST:event_eliminarButtonActionPerformed

    private void pendientesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pendientesButtonActionPerformed

        modelo.setRowCount(0);
        try {
            prestamos = pmoImp.buscar_estado(Estado.PENDIENTE);
            for (Prestamo pmo : prestamos) {
                Object[] o = new Object[5];
                o[0] = pmo.getId();
                o[1] = pmo.getFechaPrestamo();
                o[2] = pmo.getHerramienta().getNombre();
                o[3] = pmo.getPersonal().getNombre();
                o[4] = pmo.getEstado().name();

                modelo.addRow(o);
            }
        } catch (Exception e) {
            System.out.println("Error al mostrar los datos en la tabla");
        }

    }//GEN-LAST:event_pendientesButtonActionPerformed

    private void atrasadosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atrasadosButtonActionPerformed
        modelo.setRowCount(0);
        try {
            prestamos = pmoImp.buscar_estado(Estado.ATRASADO);
            for (Prestamo pmo : prestamos) {
                Object[] o = new Object[5];
                o[0] = pmo.getId();
                o[1] = pmo.getFechaPrestamo();
                o[2] = pmo.getHerramienta().getNombre();
                o[3] = pmo.getPersonal().getNombre();
                o[4] = pmo.getEstado().name();

                modelo.addRow(o);
            }
        } catch (Exception e) {
            System.out.println("Error al mostrar los datos en la tabla");
        }
    }//GEN-LAST:event_atrasadosButtonActionPerformed

    private void devueltosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_devueltosButtonActionPerformed

        modelo.setRowCount(0);
        try {
            prestamos = pmoImp.buscar_estado(Estado.DEVUELTO);
            for (Prestamo pmo : prestamos) {
                Object[] o = new Object[5];
                o[0] = pmo.getId();
                o[1] = pmo.getFechaPrestamo();
                o[2] = pmo.getHerramienta().getNombre();
                o[3] = pmo.getPersonal().getNombre();
                o[4] = pmo.getEstado().name();

                modelo.addRow(o);
            }
        } catch (Exception e) {
            System.out.println("Error al mostrar los datos en la tabla");
        }
        
    }//GEN-LAST:event_devueltosButtonActionPerformed

    private void todosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todosButtonActionPerformed

        modelo.setRowCount(0);
        try {
            prestamos = pmoImp.lista_prestamos();
            for(Prestamo pmo : prestamos){
                Object[]o = new Object[5];
                o[0] = pmo.getId();
                o[1] = pmo.getFechaPrestamo();
                o[2] = pmo.getHerramienta().getNombre();
                o[3] = pmo.getPersonal().getNombre();
                o[4] = pmo.getEstado().name();
                
                modelo.addRow(o);
            }
        } catch (Exception e) {
            System.out.println("Error al mostrar los datos en la tabla");
        }
        
    }//GEN-LAST:event_todosButtonActionPerformed

    private void verButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verButtonActionPerformed

        if(!prestamosTable.getSelectionModel().isSelectionEmpty()){
            prestamo = prestamos.get(prestamosTable.getSelectedRow());
            VerPrestamo verPrestamo = new VerPrestamo();
            JDesktopPane escritorio = getDesktopPane();
            escritorio.add(verPrestamo);
            verPrestamo.setVisible(true);
            
        }
        
    }//GEN-LAST:event_verButtonActionPerformed

    private void nuevoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoButtonActionPerformed

        NuevoPrestamo nuevoPrestamo = new NuevoPrestamo();
        JDesktopPane escritorio = getDesktopPane();
        escritorio.add(nuevoPrestamo);
        nuevoPrestamo.setVisible(true);
        
    }//GEN-LAST:event_nuevoButtonActionPerformed

    private void devolverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_devolverButtonActionPerformed
        
        if (!prestamosTable.getSelectionModel().isSelectionEmpty()) {
            prestamo = prestamos.get(prestamosTable.getSelectedRow());
            
            if (prestamo.getEstado().equals(Estado.PENDIENTE) || prestamo.getEstado().equals(Estado.ATRASADO)) {
                if (JOptionPane.showConfirmDialog(null, "Esta a punto de devolver el prestamo " + prestamo.getId() + "¬øEsta seguro?", "Devolver Prestamo", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == 0) {
                    try {
                        prestamo.setEstado(Estado.DEVUELTO);
                        prestamo.setFechaRegreso(new Date());
                        if (pmoImp.Editar(prestamo, prestamo)) {
                            JOptionPane.showMessageDialog(null, "Prestamo devuelto con √©xito", "Prestamo devuelto", JOptionPane.INFORMATION_MESSAGE);
                            
                            Herramienta herramienta = prestamo.getHerramienta();
                            int her = herramienta.getCantidadDisponible()+1;
                            herramienta.setCantidadDisponible(her);
                            herImp.Editar(herramienta, herramienta);
                            
                            
                            try {
                                JDialog espera = new JDialog();
                                espera.setLocationRelativeTo(null);
                                espera.setTitle("Generando reporte...");
                                espera.pack();
                                espera.setVisible(true);
                                
                                HashMap parametros = new HashMap();
                                parametros.put("idPrestamo", prestamo.getId());
                                
                                conexion.conexion();
                                JasperPrint jp = JasperFillManager.fillReport("src\\reporte\\reporte_devolucion.jasper", parametros, conexion.con);
                                JasperViewer.viewReport(jp, false);
                                espera.setVisible(false);
                                
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                            
                            modelo.setRowCount(0);
                            if (atrasadosButton.isSelected()) {
                                prestamos = pmoImp.buscar_estado(Estado.ATRASADO);
                            } else if (pendientesButton.isSelected()) {
                                prestamos = pmoImp.buscar_estado(Estado.PENDIENTE);
                            } else if (devueltosButton.isSelected()) {
                                prestamos = pmoImp.buscar_estado(Estado.DEVUELTO);
                            } else {
                                prestamos = pmoImp.lista_prestamos();
                            }
                            for (Prestamo pmo : prestamos) {
                                Object[] o = new Object[5];
                                o[0] = pmo.getId();
                                o[1] = pmo.getFechaPrestamo();
                                o[2] = pmo.getHerramienta().getNombre();
                                o[3] = pmo.getPersonal().getNombre();
                                o[4] = pmo.getEstado().name();
                                
                                modelo.addRow(o);
                            }
                        }
                    } catch (Exception e) {
                        System.out.println("Error al devolver el prestamo");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "El pr√©stamo ya esta devuelto");
            }
            
        }
        
    }//GEN-LAST:event_devolverButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizarButton;
    private javax.swing.JRadioButton atrasadosButton;
    private javax.swing.JButton buscarButton;
    private javax.swing.JButton buscarHerramientaButton;
    private javax.swing.JButton buscarPersonalButton;
    private javax.swing.JButton devolverButton;
    private javax.swing.JRadioButton devueltosButton;
    private javax.swing.JButton eliminarButton;
    private javax.swing.ButtonGroup grupoEstado;
    private javax.swing.JTextField herramientaTextField;
    private javax.swing.JTextField idTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nuevoButton;
    private javax.swing.JRadioButton pendientesButton;
    private javax.swing.JTextField personalTextField;
    private javax.swing.JTable prestamosTable;
    private javax.swing.JRadioButton todosButton;
    private javax.swing.JButton verButton;
    // End of variables declaration//GEN-END:variables
}
