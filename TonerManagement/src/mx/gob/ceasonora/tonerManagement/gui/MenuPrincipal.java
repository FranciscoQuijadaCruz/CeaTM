/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.gob.ceasonora.tonerManagement.gui;

import java.awt.FlowLayout;
import java.io.File;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import mx.gob.ceasonora.tonerManagement.entidades.Consumible;
import mx.gob.ceasonora.tonerManagement.entidades.Prestamo;
import mx.gob.ceasonora.tonerManagement.enumeradores.Estado;
import mx.gob.ceasonora.tonerManagement.gui.administrar.AdministrarPrestamos;
import mx.gob.ceasonora.tonerManagement.gui.administrar.nuevo.*;
import mx.gob.ceasonora.tonerManagement.gui.reporte.GenerarReporte;
import mx.gob.ceasonora.tonerManagement.implementaciones.ConsumibleImp;
import mx.gob.ceasonora.tonerManagement.implementaciones.ImagenImp;
import mx.gob.ceasonora.tonerManagement.implementaciones.PrestamoImp;
import mx.gob.ceasonora.tonerManagement.instancias.InstanciaConexion;
import mx.gob.ceasonora.tonerManagement.instancias.InstanciaVentana;
import mx.gob.ceasonora.tonerManagement.interfaces.ConsumibleInt;
import mx.gob.ceasonora.tonerManagement.interfaces.ImagenInt;
import mx.gob.ceasonora.tonerManagement.interfaces.PrestamoInt;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author kevin
 */
public class MenuPrincipal extends javax.swing.JFrame {
    ConsumibleInt conImp = new ConsumibleImp();
    InstanciaConexion conexion = InstanciaConexion.getInstanciaConexion();
    ImagenInt imgImp = new ImagenImp();
    PrestamoInt pmoImp = new PrestamoImp();
    public static List<Consumible> escasos = new ArrayList();
    public static List<Consumible> faltantes = new ArrayList();
    public static List<Prestamo> atrasados = new ArrayList();
    public static boolean atraso;

    /**
     * Creates new form MenuPrincipal
     */
    public MenuPrincipal() {
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        escritorio = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        nuevoMenu = new javax.swing.JMenu();
        nuevaSalidaItem = new javax.swing.JMenuItem();
        nuevoPrestamoItem = new javax.swing.JMenuItem();
        nuevoPersonalItem = new javax.swing.JMenuItem();
        nuevoConsumibleItem = new javax.swing.JMenuItem();
        nuevaHerramientaItem = new javax.swing.JMenuItem();
        nuevoProveedorItem = new javax.swing.JMenuItem();
        nuevoUsuarioItem = new javax.swing.JMenuItem();
        administrarMenu = new javax.swing.JMenu();
        administrarConsumiblesItem = new javax.swing.JMenuItem();
        administrarHerramientasItem = new javax.swing.JMenuItem();
        administrarPersonalItem = new javax.swing.JMenuItem();
        administrarProveedoresItem = new javax.swing.JMenuItem();
        administrarUsuariosItem = new javax.swing.JMenuItem();
        administrarSalidasItem = new javax.swing.JMenuItem();
        administrarPrestamosItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        generarReporteItem = new javax.swing.JMenuItem();
        cambiarLogotipoItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        escritorio.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                escritorioAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 854, Short.MAX_VALUE)
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 492, Short.MAX_VALUE)
        );

        nuevoMenu.setText("Nuevo");

        nuevaSalidaItem.setText("Nueva Salida...");
        nuevaSalidaItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevaSalidaItemActionPerformed(evt);
            }
        });
        nuevoMenu.add(nuevaSalidaItem);

        nuevoPrestamoItem.setText("Nuevo Préstamo...");
        nuevoPrestamoItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoPrestamoItemActionPerformed(evt);
            }
        });
        nuevoMenu.add(nuevoPrestamoItem);

        nuevoPersonalItem.setText("Nuevo Personal...");
        nuevoPersonalItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoPersonalItemActionPerformed(evt);
            }
        });
        nuevoMenu.add(nuevoPersonalItem);

        nuevoConsumibleItem.setText("Nuevo Consumible...");
        nuevoConsumibleItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoConsumibleItemActionPerformed(evt);
            }
        });
        nuevoMenu.add(nuevoConsumibleItem);

        nuevaHerramientaItem.setText("Nueva Herramienta...");
        nuevaHerramientaItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevaHerramientaItemActionPerformed(evt);
            }
        });
        nuevoMenu.add(nuevaHerramientaItem);

        nuevoProveedorItem.setText("Nuevo Proveedor...");
        nuevoProveedorItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoProveedorItemActionPerformed(evt);
            }
        });
        nuevoMenu.add(nuevoProveedorItem);

        nuevoUsuarioItem.setText("Nuevo Usuario...");
        nuevoUsuarioItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoUsuarioItemActionPerformed(evt);
            }
        });
        nuevoMenu.add(nuevoUsuarioItem);

        jMenuBar1.add(nuevoMenu);

        administrarMenu.setText("Administrar");

        administrarConsumiblesItem.setText("Consumibles...");
        administrarConsumiblesItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administrarConsumiblesItemActionPerformed(evt);
            }
        });
        administrarMenu.add(administrarConsumiblesItem);

        administrarHerramientasItem.setText("Herramientas...");
        administrarHerramientasItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administrarHerramientasItemActionPerformed(evt);
            }
        });
        administrarMenu.add(administrarHerramientasItem);

        administrarPersonalItem.setText("Personal...");
        administrarPersonalItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administrarPersonalItemActionPerformed(evt);
            }
        });
        administrarMenu.add(administrarPersonalItem);

        administrarProveedoresItem.setText("Proveedores...");
        administrarProveedoresItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administrarProveedoresItemActionPerformed(evt);
            }
        });
        administrarMenu.add(administrarProveedoresItem);

        administrarUsuariosItem.setText("Usuarios...");
        administrarUsuariosItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administrarUsuariosItemActionPerformed(evt);
            }
        });
        administrarMenu.add(administrarUsuariosItem);

        administrarSalidasItem.setText("Salidas...");
        administrarSalidasItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administrarSalidasItemActionPerformed(evt);
            }
        });
        administrarMenu.add(administrarSalidasItem);

        administrarPrestamosItem.setText("Préstamos...");
        administrarPrestamosItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administrarPrestamosItemActionPerformed(evt);
            }
        });
        administrarMenu.add(administrarPrestamosItem);

        jMenuBar1.add(administrarMenu);

        jMenu1.setText("Reportes");

        generarReporteItem.setText("Generar Reporte...");
        generarReporteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarReporteItemActionPerformed(evt);
            }
        });
        jMenu1.add(generarReporteItem);

        cambiarLogotipoItem.setText("Cambiar Logotipo...");
        cambiarLogotipoItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarLogotipoItemActionPerformed(evt);
            }
        });
        jMenu1.add(cambiarLogotipoItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nuevoUsuarioItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoUsuarioItemActionPerformed
        
        JInternalFrame nuevoUsuario = InstanciaVentana.getNuevoUsuario();
        if(!escritorio.isAncestorOf(nuevoUsuario)){
            escritorio.add(nuevoUsuario);
            nuevoUsuario.setVisible(true);
        }else{
            escritorio.setSelectedFrame(nuevoUsuario);
        }
    }//GEN-LAST:event_nuevoUsuarioItemActionPerformed

    private void nuevoConsumibleItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoConsumibleItemActionPerformed

        NuevoConsumible nuevoConsumible = new NuevoConsumible();
        if(!escritorio.isAncestorOf(nuevoConsumible)){
            escritorio.add(nuevoConsumible);
            nuevoConsumible.setVisible(true);
        }else{
            escritorio.setSelectedFrame(nuevoConsumible);
        }
    }//GEN-LAST:event_nuevoConsumibleItemActionPerformed

    private void administrarConsumiblesItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administrarConsumiblesItemActionPerformed

        JInternalFrame administrarConsumibles = InstanciaVentana.getAdministrarConsumibles();
        if(!escritorio.isAncestorOf(administrarConsumibles)){
            escritorio.add(administrarConsumibles);
            administrarConsumibles.setVisible(true);
        }else{
            escritorio.setSelectedFrame(administrarConsumibles);
        }
    }//GEN-LAST:event_administrarConsumiblesItemActionPerformed

    private void administrarHerramientasItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administrarHerramientasItemActionPerformed

        JInternalFrame administrarHerramientas = InstanciaVentana.getAdministrarHerramientas();
        if(!escritorio.isAncestorOf(administrarHerramientas)){
            escritorio.add(administrarHerramientas);
            administrarHerramientas.setVisible(true);
        }else{
            escritorio.setSelectedFrame(administrarHerramientas);
        }
    }//GEN-LAST:event_administrarHerramientasItemActionPerformed

    private void administrarPersonalItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administrarPersonalItemActionPerformed

        JInternalFrame administrarPersonal = InstanciaVentana.getAdministrarPersonal();
        if(!escritorio.isAncestorOf(administrarPersonal)){
            escritorio.add(administrarPersonal);
            administrarPersonal.setVisible(true);
        }else{
            escritorio.setSelectedFrame(administrarPersonal);
        }
    }//GEN-LAST:event_administrarPersonalItemActionPerformed

    private void administrarProveedoresItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administrarProveedoresItemActionPerformed

        JInternalFrame administrarProveedores = InstanciaVentana.getAdministrarProveedores();
        if(!escritorio.isAncestorOf(administrarProveedores)){
            escritorio.add(administrarProveedores);
            administrarProveedores.setVisible(true);
        }else{
            escritorio.setSelectedFrame(administrarProveedores);
        }
    }//GEN-LAST:event_administrarProveedoresItemActionPerformed

    private void administrarUsuariosItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administrarUsuariosItemActionPerformed

        JInternalFrame administrarUsuarios = InstanciaVentana.getAdministrarUsuarios();
        if(!escritorio.isAncestorOf(administrarUsuarios)){
            escritorio.add(administrarUsuarios);
            administrarUsuarios.setVisible(true);
        }else{
            escritorio.setSelectedFrame(administrarUsuarios);
        }
    }//GEN-LAST:event_administrarUsuariosItemActionPerformed

    private void administrarSalidasItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administrarSalidasItemActionPerformed

        JInternalFrame administrarSalidas = InstanciaVentana.getAdministrarSalidas();
        if(!escritorio.isAncestorOf(administrarSalidas)){
            escritorio.add(administrarSalidas);
            administrarSalidas.setVisible(true);
        }else{
            escritorio.setSelectedFrame(administrarSalidas);
        }
    }//GEN-LAST:event_administrarSalidasItemActionPerformed

    private void administrarPrestamosItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administrarPrestamosItemActionPerformed

        JInternalFrame administrarPrestamos = InstanciaVentana.getAdministrarPrestamos();
        if(!escritorio.isAncestorOf(administrarPrestamos)){
            escritorio.add(administrarPrestamos);
            administrarPrestamos.setVisible(true);
        }else{
            escritorio.setSelectedFrame(administrarPrestamos);
        }
    }//GEN-LAST:event_administrarPrestamosItemActionPerformed

    private void nuevoProveedorItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoProveedorItemActionPerformed

        NuevoProveedor nuevoProveedor = new NuevoProveedor();
        if(!escritorio.isAncestorOf(nuevoProveedor)){
            escritorio.add(nuevoProveedor);
            nuevoProveedor.setVisible(true);
        }else{
            escritorio.setSelectedFrame(nuevoProveedor);
        }
        
    }//GEN-LAST:event_nuevoProveedorItemActionPerformed

    private void escritorioAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_escritorioAncestorAdded
        try {
            escasos = conImp.lista_escasos();
            faltantes = conImp.lista_faltantes();
            atrasados = pmoImp.lista_prestamos().stream().filter(p -> new Date().after(p.getFechaRegreso()) && !p.getEstado().equals(Estado.DEVUELTO)).collect(Collectors.toList());
            
            for(Prestamo prestamo : atrasados){
                prestamo.setEstado(Estado.ATRASADO);
                pmoImp.Editar(prestamo, prestamo);
            }
            
            atrasados = pmoImp.buscar_estado(Estado.ATRASADO);

            if (!escasos.isEmpty() || !faltantes.isEmpty()) {
                if (JOptionPane.showConfirmDialog(null, "Hay Consumibles faltantes o a punto de agotarse, ¿Desea revisar el inventario?", "Consumibles Escasos o Faltantes", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == 0) {
                    RevisarInventario revisarInventario = new RevisarInventario();
                    escritorio.add(revisarInventario);
                    revisarInventario.setVisible(true);
                }
            }
            if(!atrasados.isEmpty()){
                if (JOptionPane.showConfirmDialog(null, "Hay Préstamos atrasados, ¿Desea revisarlos?", "Préstamos atrasados", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == 0) {
                    atraso = true;
                    AdministrarPrestamos administrarPrestamos = new AdministrarPrestamos();
                    escritorio.add(administrarPrestamos);
                    administrarPrestamos.setVisible(true);
                }
            }
            
        } catch (Exception e) {
        }    }//GEN-LAST:event_escritorioAncestorAdded

    private void nuevaSalidaItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevaSalidaItemActionPerformed

        NuevaSalida nuevaSalida = new NuevaSalida();
        escritorio.add(nuevaSalida);
        nuevaSalida.setVisible(true);
        
    }//GEN-LAST:event_nuevaSalidaItemActionPerformed

    private void nuevoPrestamoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoPrestamoItemActionPerformed

        NuevoPrestamo nuevoPrestamo = new NuevoPrestamo();
        escritorio.add(nuevoPrestamo);
        nuevoPrestamo.setVisible(true);
        
    }//GEN-LAST:event_nuevoPrestamoItemActionPerformed

    private void nuevoPersonalItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoPersonalItemActionPerformed

         NuevoPersonal nuevoPersonal = new NuevoPersonal();
        escritorio.add(nuevoPersonal);
        nuevoPersonal.setVisible(true);
        
    }//GEN-LAST:event_nuevoPersonalItemActionPerformed

    private void nuevaHerramientaItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevaHerramientaItemActionPerformed

         NuevaHerramienta nuevaHerramienta = new NuevaHerramienta();
        escritorio.add(nuevaHerramienta);
        nuevaHerramienta.setVisible(true);
        
    }//GEN-LAST:event_nuevaHerramientaItemActionPerformed

    private void cambiarLogotipoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarLogotipoItemActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int resultado = fileChooser.showOpenDialog(this);
        if(resultado == JFileChooser.APPROVE_OPTION){
            File archivo = fileChooser.getSelectedFile();
            String ruta = archivo.getAbsolutePath();
            ImagenInt imImp = new ImagenImp();
            try {
                imImp.Actualizar(ruta);
            } catch (Exception e) {
            }
        }
        
    }//GEN-LAST:event_cambiarLogotipoItemActionPerformed

    private void generarReporteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarReporteItemActionPerformed

        GenerarReporte generar = new GenerarReporte();
        escritorio.add(generar);
        generar.setVisible(true);
        
    }//GEN-LAST:event_generarReporteItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem administrarConsumiblesItem;
    private javax.swing.JMenuItem administrarHerramientasItem;
    private javax.swing.JMenu administrarMenu;
    private javax.swing.JMenuItem administrarPersonalItem;
    private javax.swing.JMenuItem administrarPrestamosItem;
    private javax.swing.JMenuItem administrarProveedoresItem;
    private javax.swing.JMenuItem administrarSalidasItem;
    private javax.swing.JMenuItem administrarUsuariosItem;
    private javax.swing.JMenuItem cambiarLogotipoItem;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JMenuItem generarReporteItem;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem nuevaHerramientaItem;
    private javax.swing.JMenuItem nuevaSalidaItem;
    private javax.swing.JMenuItem nuevoConsumibleItem;
    private javax.swing.JMenu nuevoMenu;
    private javax.swing.JMenuItem nuevoPersonalItem;
    private javax.swing.JMenuItem nuevoPrestamoItem;
    private javax.swing.JMenuItem nuevoProveedorItem;
    private javax.swing.JMenuItem nuevoUsuarioItem;
    // End of variables declaration//GEN-END:variables
}
