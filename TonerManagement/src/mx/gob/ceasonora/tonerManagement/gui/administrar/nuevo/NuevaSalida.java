/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.gob.ceasonora.tonerManagement.gui.administrar.nuevo;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mx.gob.ceasonora.tonerManagement.entidades.Consumible;
import mx.gob.ceasonora.tonerManagement.entidades.Personal;
import mx.gob.ceasonora.tonerManagement.entidades.Salida;
import mx.gob.ceasonora.tonerManagement.gui.Login;
import mx.gob.ceasonora.tonerManagement.implementaciones.ConsumibleImp;
import mx.gob.ceasonora.tonerManagement.implementaciones.ImagenImp;
import mx.gob.ceasonora.tonerManagement.implementaciones.PersonalImp;
import mx.gob.ceasonora.tonerManagement.implementaciones.SalidaImp;
import mx.gob.ceasonora.tonerManagement.instancias.InstanciaConexion;
import mx.gob.ceasonora.tonerManagement.interfaces.ConsumibleInt;
import mx.gob.ceasonora.tonerManagement.interfaces.ImagenInt;
import mx.gob.ceasonora.tonerManagement.interfaces.PersonalInt;
import mx.gob.ceasonora.tonerManagement.interfaces.SalidaInt;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author kevin
 */
public class NuevaSalida extends javax.swing.JInternalFrame {
    InstanciaConexion conexion = InstanciaConexion.getInstanciaConexion();
    ConsumibleInt conImp = new ConsumibleImp();
    PersonalInt perImp = new PersonalImp();
    SalidaInt salImp = new SalidaImp();
    ImagenInt imgImp = new ImagenImp();
    
    DefaultTableModel modeloCon;
    DefaultTableModel modeloPer;
    String[] titulosCon = {"# Producto","Nombre","Descripcion","Cantidad Disponible"};
    String[] titulosPer = {"Nombre","Area","Puesto"};
    
    List<Consumible> consumibles;
    List<Personal> listaPersonal;

    /**
     * Creates new form NuevoConsumible
     */
    public NuevaSalida() {
        initComponents();
        
        modeloCon = new DefaultTableModel();
        modeloPer = new DefaultTableModel();
        consumiblesTable.setModel(modeloCon);
        modeloCon.setColumnIdentifiers(titulosCon);        
        personalTable.setModel(modeloPer);
        modeloPer.setColumnIdentifiers(titulosPer);
        
        
        try {
            consumibles = conImp.lista_consumibles();
            
            for(Consumible con : consumibles){
                Object[]o = new Object[4];
                o[0] = con.getCodigoProducto();
                o[1] = con.getNombre();
                o[2] = con.getDescripcion();
                o[3] = con.getCantidad();
                
                modeloCon.addRow(o);
            }
        } catch (Exception e) {
            System.out.println("Error al mostrar los consumibles en la tabla");
        }
        
        try {
            listaPersonal = perImp.lista_personal();
            
            for(Personal per : listaPersonal){
                Object[]o = new Object[3];
                o[0] = per.getNombre();
                o[1] = per.getArea();
                o[2] = per.getPuesto();
                
                modeloPer.addRow(o);
            }
        } catch (Exception e) {
            System.out.println("Error al mostrar el personal en la tabla");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        personalTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        consumiblesTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        codigoProductoTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        nombreConsumibleTextField = new javax.swing.JTextField();
        mostrarConsumiblesButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        nombrePersonalTextField = new javax.swing.JTextField();
        mostrarPersonalButton = new javax.swing.JButton();
        nuevoPersonalButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        cantidadTextField = new javax.swing.JTextField();
        editarCantidadButton = new javax.swing.JButton();
        generarButton = new javax.swing.JButton();

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(51, 102, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nueva Salida");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        personalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Area", "Puesto"
            }
        ));
        jScrollPane1.setViewportView(personalTable);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Seleccione el Personal que recibirá:");

        consumiblesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "# Producto", "Nombre", "Descripcion", "Cantidad Disponible"
            }
        ));
        jScrollPane2.setViewportView(consumiblesTable);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Seleccione el consumible que saldrá:");

        jLabel2.setText("Buscar por # de Producto:");

        codigoProductoTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                codigoProductoTextFieldKeyReleased(evt);
            }
        });

        jLabel5.setText("Buscar por Nombre:");

        nombreConsumibleTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreConsumibleTextFieldActionPerformed(evt);
            }
        });
        nombreConsumibleTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombreConsumibleTextFieldKeyReleased(evt);
            }
        });

        mostrarConsumiblesButton.setText("Mostrar Todos");
        mostrarConsumiblesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarConsumiblesButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Buscar por Nombre:");

        nombrePersonalTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombrePersonalTextFieldKeyReleased(evt);
            }
        });

        mostrarPersonalButton.setText("Mostrar Todos");
        mostrarPersonalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarPersonalButtonActionPerformed(evt);
            }
        });

        nuevoPersonalButton.setText("Nuevo Personal");
        nuevoPersonalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoPersonalButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Cantidad:");

        cantidadTextField.setEditable(false);
        cantidadTextField.setText("1");

        editarCantidadButton.setText("Editar Cantidad");
        editarCantidadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarCantidadButtonActionPerformed(evt);
            }
        });

        generarButton.setText("Generar Salida");
        generarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cantidadTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editarCantidadButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mostrarConsumiblesButton)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(codigoProductoTextField)
                                        .addComponent(nombreConsumibleTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(mostrarPersonalButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(nuevoPersonalButton))
                                    .addComponent(nombrePersonalTextField)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(generarButton)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(codigoProductoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(nombrePersonalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(nombreConsumibleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addComponent(mostrarConsumiblesButton))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mostrarPersonalButton)
                            .addComponent(nuevoPersonalButton))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cantidadTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editarCantidadButton))
                .addGap(20, 20, 20)
                .addComponent(generarButton))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codigoProductoTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoProductoTextFieldKeyReleased

        modeloCon.setRowCount(0);
        
        try {
            consumibles = conImp.buscar_codigo(codigoProductoTextField.getText());
            
            for(Consumible con : consumibles){
                Object[]o = new Object[4];
                o[0] = con.getCodigoProducto();
                o[1] = con.getNombre();
                o[2] = con.getDescripcion();
                o[3] = con.getCantidad();
                
                modeloCon.addRow(o);
            }
        } catch (Exception e) {
            System.out.println("Error al mostrar los consumibles en la tabla");
        }
        
    }//GEN-LAST:event_codigoProductoTextFieldKeyReleased

    private void nombreConsumibleTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreConsumibleTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreConsumibleTextFieldActionPerformed

    private void nombreConsumibleTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreConsumibleTextFieldKeyReleased

        modeloCon.setRowCount(0);
        try {
            consumibles = conImp.buscar_nombre(codigoProductoTextField.getText());
            
            for(Consumible con : consumibles){
                Object[]o = new Object[4];
                o[0] = con.getCodigoProducto();
                o[1] = con.getNombre();
                o[2] = con.getDescripcion();
                o[3] = con.getCantidad();
                
                modeloCon.addRow(o);
            }
        } catch (Exception e) {
            System.out.println("Error al mostrar los consumibles en la tabla");
        }
        
    }//GEN-LAST:event_nombreConsumibleTextFieldKeyReleased

    private void mostrarConsumiblesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarConsumiblesButtonActionPerformed

        modeloCon.setRowCount(0);
        try {
            consumibles = conImp.lista_consumibles();
            
            for(Consumible con : consumibles){
                Object[]o = new Object[4];
                o[0] = con.getCodigoProducto();
                o[1] = con.getNombre();
                o[2] = con.getDescripcion();
                o[3] = con.getCantidad();
                
                modeloCon.addRow(o);
            }
        } catch (Exception e) {
            System.out.println("Error al mostrar los consumibles en la tabla");
        }
        
    }//GEN-LAST:event_mostrarConsumiblesButtonActionPerformed

    private void nombrePersonalTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombrePersonalTextFieldKeyReleased

        modeloPer.setRowCount(0);
        try {
            listaPersonal = perImp.buscar_nombre(nombrePersonalTextField.getText());
            
            for(Personal per : listaPersonal){
                Object[]o = new Object[3];
                o[0] = per.getNombre();
                o[1] = per.getArea();
                o[2] = per.getPuesto();
                
                modeloPer.addRow(o);
            }
        } catch (Exception e) {
            System.out.println("Error al mostrar el personal en la tabla");
        }
        
    }//GEN-LAST:event_nombrePersonalTextFieldKeyReleased

    private void mostrarPersonalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarPersonalButtonActionPerformed

        modeloPer.setRowCount(0);
        try {
            listaPersonal = perImp.lista_personal();
            
            for(Personal per : listaPersonal){
                Object[]o = new Object[3];
                o[0] = per.getNombre();
                o[1] = per.getArea();
                o[2] = per.getPuesto();
                
                modeloPer.addRow(o);
            }
        } catch (Exception e) {
            System.out.println("Error al mostrar el personal en la tabla");
        }
        
    }//GEN-LAST:event_mostrarPersonalButtonActionPerformed

    private void nuevoPersonalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoPersonalButtonActionPerformed

        NuevoPersonal nuevoPersonal = new NuevoPersonal();
        JDesktopPane escritorio = getDesktopPane();
        escritorio.add(nuevoPersonal);
        nuevoPersonal.setVisible(true);
        
    }//GEN-LAST:event_nuevoPersonalButtonActionPerformed

    private void editarCantidadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarCantidadButtonActionPerformed

        cantidadTextField.setEditable(true);
        
    }//GEN-LAST:event_editarCantidadButtonActionPerformed

    private void generarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarButtonActionPerformed

        if(!consumiblesTable.getSelectionModel().isSelectionEmpty() && !personalTable.getSelectionModel().isSelectionEmpty()){
            Consumible con = consumibles.get(consumiblesTable.getSelectedRow());
            Personal per = listaPersonal.get(personalTable.getSelectedRow());
            
            if(con.getCantidad()>0){
                int cantidadRestante = con.getCantidad() - Integer.parseInt(cantidadTextField.getText());
                
                if(cantidadRestante >= 0){
                    
                    try {
                        con.setCantidad(cantidadRestante);

                        Salida salida = new Salida();
                        salida.setCantidad(Integer.parseInt(cantidadTextField.getText()));
                        salida.setConsumible(con);
                        salida.setPersonal(per);
                        salida.setFecha(new Date());
                        salida.setUsuario(Login.usuario);

                        if(salImp.Agregar(salida)){
                            JOptionPane.showMessageDialog(null, "Salida generada con éxito", "Salida Generada", JOptionPane.INFORMATION_MESSAGE);
                            conImp.Editar(con, con);
       
                            //Reporte
                            try {
                                JDialog espera = new JDialog();
                                espera.setLocationRelativeTo(null);
                                espera.setTitle("Generando reporte...");
                                espera.pack();
                                espera.setVisible(true);

                                HashMap parametros = new HashMap();

                                List<Salida> lista = salImp.lista_salidas();
                                parametros.put("idSalida", lista.get(lista.size() - 1).getId());

                                conexion.conexion();
                                JasperPrint jp = JasperFillManager.fillReport("src\\reporte\\reporte_salida.jasper", parametros, conexion.con);
                                JasperViewer.viewReport(jp, false);
                                espera.setVisible(false);

                            } catch (Exception e) {
                                e.printStackTrace();
                            }

                            this.dispose();
                        }
                        
                    } catch (Exception e) {
                        System.out.println("Hay error al registrar la salida");
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "La cantidad deseada excede la cantidad disponible del Consumible seleccionado", "Cantidad excesiva", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(null, "No se cuenta con existencias del Consumible seleccionado", "Consumible agotado", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "No se ha seleccionado Personal y/o Consumible", "No se puede generar salida", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_generarButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cantidadTextField;
    private javax.swing.JTextField codigoProductoTextField;
    private javax.swing.JTable consumiblesTable;
    private javax.swing.JButton editarCantidadButton;
    private javax.swing.JButton generarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton mostrarConsumiblesButton;
    private javax.swing.JButton mostrarPersonalButton;
    private javax.swing.JTextField nombreConsumibleTextField;
    private javax.swing.JTextField nombrePersonalTextField;
    private javax.swing.JButton nuevoPersonalButton;
    private javax.swing.JTable personalTable;
    // End of variables declaration//GEN-END:variables
}
